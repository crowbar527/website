@model List<CrowbarWebsite.Models.StaticCamera>
@using CrowbarWebsite.Services;
@using Microsoft.AspNetCore.Identity
@using CrowbarWebsite.Areas.Identity.Data
@inject SignInManager<CrowbarWebsiteUser> SignInManager
@inject UserManager<CrowbarWebsiteUser> UserManager

<head>
    <script src="https://maps.googleapis.com/maps/api/js?"></script>
    <!--Include Leaflet-->
    <link rel="stylesheet" href="~/lib/Leaflet/leaflet.css" />
    <script src="~/lib/Leaflet/leaflet.js"></script>

</head>
<div id="ljsmap" style="width:100%;height:800px;">

</div>
<span id="lastupdateddiv">
    @($"Last Updated: {CacheService.LastUpdated.ToLocalTime().ToString("HH:mm")} UTC")
</span>

<!--Setup map-->
<script>
    var mymap = L.map('ljsmap').setView([-41.2177074, 178.1841412], 5.96);
    L.tileLayer('https://a.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '<a href="https://www.openstreetmap.org/copyright">© OpenStreetMap contributors</a>',
        maxZoom: 18,
        tileSize: 512,
        zoomOffset: -1
    }).addTo(mymap);
    //Create Icons
    var icon_redlight = L.icon({
        iconUrl: './lib/art/camera-redlight.png',
        iconSize: [26, 26],
        iconAnchor: [13.5, 26],
        popupAnchor: [0, -26]
    });
    var icon_staticcamera = L.icon({
        iconUrl: './lib/art/camera-static.png',
        iconSize: [26, 26],
        iconAnchor: [13.5, 26],
        popupAnchor: [0, -26]
    });
</script>

@foreach (var item in Model)
{

    {
        @if (SignInManager.IsSignedIn(User))
        {

            //Add Marker
            <script>
            var marker = L.marker([@item.StartPos.Latitude, @item.StartPos.Longtitude], {
                icon: @(item.Type.Equals("STATIC") ? "icon_staticcamera" : "icon_redlight")
            });
                marker.bindPopup('@item.Street ' + '\nNumber of crashes:' + ' @CacheService.GetPointsForCamera($"{item.Street}.{item.Area}").Count()');
            marker.addTo(mymap);
            </script>
            //Add Area
<script>
                var a2c94_center = [@($"{item.StartPos.Latitude},{item.StartPos.Longtitude}")]
                var a2c94 = L.circle(a2c94_center,{
                    color: 'red',
                    radius: @(CacheService.CASRadiusInMeters),
                    fillcolor: '#f03',
                    fillopacity: 0.5,
                    units: 'meters',
                }).addTo(mymap);
</script>
        }
        else
        {
            //Add Marker
            <script>
            var marker = L.marker([@item.StartPos.Latitude, @item.StartPos.Longtitude], {
                icon: @(item.Type.Equals("STATIC") ? "icon_staticcamera" : "icon_redlight")
            });
                marker.bindPopup('Kindly please give us your password to see Crash Data');
                marker.addTo(mymap);
            </script>
        }
    }
}
